package myvi.proto;

option java_package = "my.app.myvi.protobuf.gen";
option java_outer_classname = "MyviProtos";
option optimize_for = LITE_RUNTIME;


// ---------- операции чтения\записи данных модели --------------

message read_model_data_request_t {
	required string path = 1; // путь к параметру
}

// пакет с данными поля модели
message read_model_data_response_t {

	required string path = 1; // путь к параметру
	// возвращаемые данные
	optional string string_value = 2;
	optional uint32 int_value = 3;
	optional double float_value = 4;
	required uint32 code = 5; // код водврата
}

message write_model_data_request_t {
	required string path = 1;
	// записываемые данные
	optional string string_value = 2;
	optional uint32 int_value = 3;
	optional double float_value = 4;
}

message write_model_data_ack_t {
	required uint32 code = 1; // код водврата
}


// ---------- сообщения технологического интерфейса --------------

enum key_t {
	K_LEFT = 1;
	K_RIGHT = 2;
	K_UP = 3;
	K_DOWN = 4;
	K_ESC = 5;
	K_ENTER = 6;
	K_BKSP = 7;
	K_F1 = 8;
	K_F2 = 9;
	K_F3 = 10;
	K_F4 = 11;
	K_F5 = 12;
	K_0 = 13;
	K_1 = 14;
	K_2 = 15;
	K_3 = 16;
	K_4 = 17;
	K_5 = 18;
	K_6 = 19;
	K_7 = 20;
	K_8 = 21;
	K_9 = 22;
	K_SAVE = 23;
	K_EXIT = 24;
	K_DOT = 25;
	K_DELETE = 26;
}

// элемент данных файла
message file_data_t {
	required uint32 file_id = 1;
	required uint32 offset = 2;
	optional uint32 crc = 3;
	required bool first = 4;
	required bytes data = 5;
}

// запрос на скачивание файла
message download_request_t {
	required uint32 file_id = 1;
	required uint32 offset = 2;
	required uint32 length = 3;
}

// пакет с информацией о файле
message file_info_t {
	required uint32 file_id = 1;
	required uint32 cur_len = 2;
	optional uint32 max_len = 3;
	optional uint32 crc = 4;
}

// ----------------------------------------------
// ---------- Основное определение --------------
// ----------------------------------------------

// интерфейс ответов этой системы на стороне удалённой
message host_interface_t {
	optional read_model_data_response_t read_model_data_response = 1;
	optional write_model_data_ack_t write_model_data_ack = 2;
	
// технологический интерфейс
	optional file_data_t download_response = 14;
	optional file_info_t file_info_response = 15;
	optional uint32 error = 16;
}


// интерфейс запросов к этой системе на строне удалённой
message exported_interface_t {

	optional read_model_data_request_t read_model_data_request = 1;
	optional write_model_data_request_t write_model_data_request = 2;
	
// технологический интерфейс
	optional key_t key_event = 30;

	optional file_data_t upload_file = 31;
	optional download_request_t download_file = 32;
	
	optional file_info_t update_file_info = 33;
	optional uint32 read_file_info = 34;
}
