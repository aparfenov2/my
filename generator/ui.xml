<schema>

<!-- Генерация UI: Схема сериализуется в нативный формат через генератор. Интерфейс строит нативная фабрика -->

<!-- Единицы измерения -->
	<units>
		<unit id="mhz_ut">
			<unit multiplier="1000000" name="MHz"/>
			<unit multiplier="1000" name="KHz"/>
			<unit multiplier="1" name="Hz"/>
		</unit>
	</units>


	<types>
<!-- опишем простые типы, чтобы их можно было найти -->	
		<type id="float" type="base" />
		<type id="u8" type="base" />
		<type id="s8" type="base" />
		<type id="u16" type="base" />
		<type id="s16" type="base" />
		<type id="u32" type="base" />
		<type id="s32" type="base" />
		
		<type id="dme_sfx_t" name="Суффикс DME" type="enum">
			<enum id="X" name="X" value="0" />
			<enum id="Y" name="Y" value="1" />
		</type>
		
		<!-- Использование полей параметра комплексного типа полностью определяется контроллером -->
		<!-- поэтому здесь для полей вид не указан -->
		<type id="dme_t" name="Параметры DME" type="complex">
			<parameter id="ch" name="Канал DME" type="u8" validators="range" lo="-127" hi="128" />
			<parameter id="sfx" name="Суффикс DME" type="dme_sfx_t" />
		</type>
		<type id="measure_ctl_t" name="Измерение" type="enum">
			<enum id="START" name="Старт" value="0" />
			<enum id="STOP" name="Стоп" value="1" />
		</type>
		<type id="output_mode_t" name="Выход" type="enum">
			<enum id="ANT" name="Антенна" value="0" glyph="A" />
			<enum id="ATTEN" name="Аттен." value="1" glyph="B" />
			<enum id="CALIB" name="Калибр." value="2" glyph="C" />
		</type>
	</types>
	
	<parameters>
		<parameter id="dme" type="dme_t"  name="Параметры DME" view="dme"  />
		<parameter id="measure_ctl" type="measure_ctl_t"  name="Измерение"  />
		<parameter id="output_mode" type="output_mode_t"  name="Выход"  />
		<parameter id="out_level" type="float" precision="0.1" validators="range" lo="-70" hi="70"  name="Уровень" label="dBm" view="tbox_label" />
	</parameters>
	
<!-- предопределенные контроллеры -->	
	<controllers>
		<controller id="menu"/>
		<controller id="menu_item"/>
		<controller id="dme"/>
	</controllers>

	<views>
<!-- предопределенные (в коде) виды. Для них также создается мета -->
		<view id="dme" layout="stack" vertical="false" preferred_item_size="true" drawer="background" background="BACKGROUND_LIGHT" > <!-- label{Параметры DME} \n label{Канал DME} texbox \n label{Суффикс DME} combobox   -->
			<view id="ch" inherited="tbox" controller="tbox" childParameter="ch" />
			<view id="sfx" inherited="cbox" controller="cbox" childParameter="sfx" />
		</view>
		<view id="tbox" kind="predefined" /> <!-- label{param_name} + textbox -->
		<view id="cbox" kind="predefined" /> <!-- label{param_name} + combobox -->
		<view id="tbox_cbox" kind="predefined" /> <!-- label{param_name} + textbox + combobox -->
		<view id="tbox_label" kind="predefined" /> <!-- label{param_name} + textbox + label -->
		<view id="lab" kind="predefined" /> <!-- label -->
		<view id="default_composite_template" layout="stack" vertical="true"/>
<!-- генерируемые виды -->
		<view id="root" kind="generated" layout="stretch">
		<!-- по id внутренних видов их можно искать в инстансе динамического вида-->
		<!-- контроллер меню достраивает вид меню по списку параметров -->
		<!-- w=-1, h=-1 - значения взять из parent -->
			<view id="menu" kind="generated" menuRef="main" itemTemplateView="item_template" layout="stack" vertical="true" controller="menu" />
		</view>
		<view id="item_template" layout="menu" controller="menu_item">
			<view id="lab" inherited="lab" />
			<!-- элемент меню вставляется дочерним видом (реализация зависит от контроллера меню) -->
		</view>
	</views>
	
	<menus>
		<menu id="main" name="Главное">
			<parameterRef id="dme" />
<!--			
			<parameterRef id="measure_ctl" />
			<parameterRef id="output_mode" />
			<parameterRef id="out_level" />
-->			
		</menu>
	</menus>
</schema>